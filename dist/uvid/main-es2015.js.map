{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/room-connection/room-connection.component.ts","./src/app/components/room-connection/room-connection.component.html","./src/app/models/webrtc-client.model.ts","./src/app/services/mediastream.service.ts","./src/app/services/webrtc-client-connection.service.ts","./src/app/services/webrtc-clients.service.ts","./src/app/webrtc/webrtc-event-messages.ts","./src/environments/environment.ts","./src/main.ts","ws (ignored)"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RoomConnectionComponent } from './components/room-connection/room-connection.component';\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'room-connection/', pathMatch: 'full' },\n  { path: 'room-connection', redirectTo: 'room-connection/', pathMatch: 'full' },\n  { path: 'room-connection/:roomId', component: RoomConnectionComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent {\n  title = 'uvid';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { RoomConnectionComponent } from './components/room-connection/room-connection.component';\nimport { WebRTCConnectionService } from './services/webrtc-client-connection.service';\nimport { WebRTCClientService } from './services/webrtc-clients.service';\nimport { MediaStreamService } from './services/mediastream.service';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatCardModule } from '@angular/material/card';\nrequire('webrtc-adapter');\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RoomConnectionComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    MatFormFieldModule,\n    MatButtonModule,\n    MatInputModule,\n    MatCardModule\n  ],\n  providers: [\n    WebRTCConnectionService,\n    WebRTCClientService,\n    MediaStreamService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\nimport { map } from 'rxjs/operators';\nimport { WebRTCConnectionService } from '../../services/webrtc-client-connection.service';\nimport { WebRTCClientService } from '../../services/webrtc-clients.service';\nimport { WebRTCClient } from '../../models/webrtc-client.model';\nimport { SafeResourceUrl, DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-room-connection',\n  templateUrl: './room-connection.component.html',\n  styleUrls: ['./room-connection.component.sass']\n})\nexport class RoomConnectionComponent implements OnInit {\n\n  public userName: string = '';\n  public roomId?: string = undefined;\n  public usersConnected: WebRTCClient[];\n  public isConnected: boolean;\n  public currentURL: string;\n  public roomWasFull: boolean = false;\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private webRTCConnectionService: WebRTCConnectionService,\n              private webRTCClientService: WebRTCClientService,\n              private domSanitizer: DomSanitizer) {}\n\n  ngOnInit(): void {\n    this.route.params.subscribe((params) => {\n      if (params.roomId) {\n        this.webRTCClientService.setRoomId(params.roomId, false);\n      } else {\n        this.webRTCClientService.setRoomId(undefined, false);\n      }\n    });\n\n    this.webRTCClientService.getRoomId.subscribe((roomId) => {\n      this.roomId = roomId;\n    });\n\n    this.webRTCClientService.getRoomWasFull.subscribe((roomWasFull) => {\n      this.roomWasFull = roomWasFull;\n    });\n\n    this.webRTCClientService.getClients.subscribe((userList) => {\n      this.usersConnected = userList.toArray();\n    }, (e) => {\n      console.error('Error updating user list:', e);\n    });\n\n    this.isConnected = false;\n    this.currentURL = location.origin + '/room-connection/';\n  }\n\n  copyLink() {\n    const tempTxtBox = document.createElement('textarea');\n    tempTxtBox.style.position = 'fixed';\n    tempTxtBox.style.left = '0';\n    tempTxtBox.style.top = '0';\n    tempTxtBox.style.opacity = '0';\n    tempTxtBox.value = this.currentURL + this.roomId;\n    document.body.appendChild(tempTxtBox);\n    tempTxtBox.focus();\n    tempTxtBox.select();\n    document.execCommand('copy');\n    document.body.removeChild(tempTxtBox);\n  }\n\n  connect() {\n    this.webRTCConnectionService.connect(this.userName, this.roomId);\n    this.isConnected = true;\n  }\n\n  disconnect() {\n    this.webRTCConnectionService.disconnect();\n    this.isConnected = false;\n    this.webRTCClientService.setRoomId(undefined, false);\n    this.router.navigate(['room-connection', '']);\n    location.reload();\n  }\n\n  setStreamSrc(user: WebRTCClient): string {\n    const video = document.getElementById(user.id);\n    (video as HTMLMediaElement).srcObject = user.stream;\n\n    return user.id;\n  }\n\n}\n","<div class=\"mainContainer\">\n  <mat-form-field class=\"txtUserName\">\n    <mat-label>Name</mat-label>\n    <input matInput placeholder=\"your name\" [(ngModel)]=\"userName\" >\n  </mat-form-field>\n\n  <button mat-raised-button color=\"primary\" (click)=\"connect()\" *ngIf=\"!isConnected\" [disabled]=\"userName === ''\" >Connect</button>\n  <button mat-raised-button color=\"primary\" (click)=\"disconnect()\" *ngIf=\"isConnected\" >Disconnect</button>\n  <mat-card class=\"roomInvLink\" *ngIf=\"roomWasFull\"><p>You were connected to a new room since the requested room was full.</p></mat-card>\n  <mat-card class=\"roomInvLink\" *ngIf=\"roomId\"><p class='roomInvLinkLabel'>Room invitation link :</p>\n    <p>{{ currentURL + roomId }}</p>\n    <button mat-raised-button color=\"primary\" (click)=\"copyLink()\" *ngIf=\"roomId\" >Copy to clipboard</button></mat-card>\n\n  <div class=\"streamsContainer\">\n    <div *ngFor=\"let user of usersConnected\" class=\"userContainer\" >\n      <p class=\"userName\" >{{ user.userName }}</p>\n      <video class=\"videoScreen\" id=\"{{user.id}}\" [src]=\"setStreamSrc(user)\" controls autoplay>\n      </video>\n    </div>\n  </div>\n</div>\n","export class WebRTCClient {\r\n  id?: string;\r\n  userName: string;\r\n  stream: MediaStream;\r\n\r\n  constructor(id: string, userName: string, stream: MediaStream)\r\n  {\r\n    this.id = id;\r\n    this.userName = userName;\r\n    this.stream = stream;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class MediaStreamService {\r\n  private mediaStream: MediaStream = undefined;\r\n\r\n  public getMediaStream(): Promise<MediaStream> {\r\n    if (!this.mediaStream) {\r\n      return navigator.mediaDevices.getUserMedia({\r\n        audio: true, video: true\r\n      }).then ((stream: MediaStream) => {\r\n        return Promise.resolve(stream);\r\n      }).catch((e: MediaStreamError) => {\r\n        console.error('Could not get media stream: ', e);\r\n        return Promise.reject(e);\r\n      });\r\n    } else {\r\n      return Promise.resolve(this.mediaStream);\r\n    }\r\n  }\r\n}\r\n","import { Injectable, ComponentFactoryResolver } from '@angular/core';\r\nimport * as socketIO from 'socket.io-client';\r\nimport { WebRTCClientService } from './webrtc-clients.service';\r\nimport { MediaStreamService } from './mediastream.service';\r\nimport { WebRTCClient } from '../models/webrtc-client.model';\r\nimport { environment } from '../../environments/environment';\r\nimport { RTC_INIT,\r\n         RTC_DISCONNECT,\r\n         RTC_USER_CONNECTED,\r\n         RTC_CONNECTED_TO_ROOM,\r\n         RTC_ROOM_IS_FULL,\r\n         RTC_MESSAGE,\r\n         RTC_MESSAGE_TYPE_ICE,\r\n         RTC_MESSAGE_TYPE_OFFER,\r\n         RTC_MESSAGE_TYPE_ANSWER,\r\n         RTC_USER_DISCONNECTED} from '../webrtc/webrtc-event-messages';\r\n\r\n@Injectable()\r\nexport class WebRTCConnectionService {\r\n  private socket: SocketIOClient.Socket;\r\n  private userConnections: RTCPeerConnection[] = [];\r\n  private mediaStream: MediaStream = undefined;\r\n  private userId: string;\r\n\r\nconstructor(private webRTCClientsService: WebRTCClientService,\r\n            private mediaStreamService: MediaStreamService) {\r\n  this.socket = socketIO.connect(environment.ServiceLink);\r\n  this.socket.on('connect', () => {\r\n    this.userId = this.socket.id;\r\n    console.log('Socket', this.socket.id, 'connected.');\r\n  });\r\n\r\n  this.socket.on('disconnect', () => {\r\n    console.log('Socket', this.socket.id, 'disconnected.');\r\n  });\r\n\r\n  this.socket.on(RTC_USER_CONNECTED, (data) => {\r\n    this.makeOffer(data.userId, data.username);\r\n  });\r\n\r\n  this.socket.on(RTC_USER_DISCONNECTED, (data) => {\r\n    this.userDisconnected(data.userId);\r\n  });\r\n\r\n  this.socket.on(RTC_CONNECTED_TO_ROOM, (data) => {\r\n    this.webRTCClientsService.setRoomId(data.roomId, false);\r\n  });\r\n\r\n  this.socket.on(RTC_ROOM_IS_FULL, (data) => {\r\n    this.webRTCClientsService.setRoomId(data.roomId, true);\r\n  });\r\n\r\n  this.socket.on(RTC_MESSAGE, (data) => {\r\n    this.handleRTCMessage(data);\r\n  });\r\n}\r\n\r\npublic connect(userName: string, room?: string, ) {\r\n  this.mediaStreamService.getMediaStream().then((stream: MediaStream) => {\r\n    this.mediaStream = stream;\r\n    const currentUser = new WebRTCClient(this.socket.id, userName, this.mediaStream);\r\n    this.webRTCClientsService.addClient(currentUser);\r\n    if (!room) {\r\n      this.socket.emit(RTC_INIT, { userId: currentUser.id });\r\n    } else {\r\n      console.log(room);\r\n      this.socket.emit(RTC_INIT, { userId: currentUser.id, room: room, username: userName });\r\n    }\r\n  }).catch(e => {\r\n    console.error('Couln\\'t get mediaStream', e);\r\n  });\r\n}\r\n\r\npublic disconnect() {\r\n  this.socket.emit(RTC_DISCONNECT, { userId: this.userId });\r\n  this.mediaStream.getTracks().forEach((track) => {\r\n    track.stop();\r\n  });\r\n\r\n  this.webRTCClientsService.removeClient(this.socket.id);\r\n}\r\n\r\nprivate makeOffer(userId: string, userName: string) {\r\n  const userConnection = this.getUserConnection(userId, userName);\r\n  const options = {\r\n    mandatory: {\r\n      offerToReceiveVideo: true,\r\n      offerToReceiveAudio: true\r\n    }\r\n  };\r\n\r\n  userConnection.createOffer({ offerToReceiveAudio: true, offerToReceiveVideo: true }).then((session: RTCSessionDescriptionInit) => {\r\n    return userConnection.setLocalDescription(session).then(() => {\r\n      this.socket.emit(RTC_MESSAGE, {\r\n        from: this.userId,\r\n        dest: userId,\r\n        session: session,\r\n        type: RTC_MESSAGE_TYPE_OFFER,\r\n        username: this.webRTCClientsService.getUserName(this.userId)\r\n      });\r\n    });\r\n  });\r\n}\r\n\r\nprivate getUserConnection(userId, userName): RTCPeerConnection {\r\n  if (this.userConnections[userId]) {\r\n    return this.userConnections[userId];\r\n  }\r\n\r\n  const userConnection = new RTCPeerConnection();\r\n  this.userConnections[userId] = userConnection;\r\n  userConnection.onicecandidate = (event: RTCPeerConnectionIceEvent) => {\r\n    this.socket.emit(RTC_MESSAGE, {\r\n      from: this.userId,\r\n      dest: userId,\r\n      ice: event.candidate,\r\n      type: RTC_MESSAGE_TYPE_ICE\r\n    });\r\n  };\r\n\r\n  userConnection.onnegotiationneeded = () => {\r\n    console.log('Need nogociation:', userId);\r\n  };\r\n\r\n  userConnection.onsignalingstatechange = () => {\r\n    console.log('Client', userId, ' ICE signal changed to', userConnection.signalingState);\r\n  };\r\n\r\n  this.mediaStream.getTracks().forEach(track => {\r\n    userConnection.addTrack(track, this.mediaStream);\r\n  });\r\n  userConnection.ontrack = (event: RTCTrackEvent) => {\r\n    // Work around so this code only fires once even if the event is triggered twice (audio and video)\r\n    if (event.track.kind === 'video') {\r\n      console.log('Received new stream');\r\n      const user = new WebRTCClient(userId, userName, event.streams[0]);\r\n      this.webRTCClientsService.addClient(user);\r\n    }\r\n  };\r\n\r\n  return userConnection;\r\n}\r\n\r\nprivate handleRTCMessage(message) {\r\n  const userConnection = this.getUserConnection(message.from, message.username);\r\n\r\n  switch (message.type) {\r\n    case RTC_MESSAGE_TYPE_ICE:\r\n      if (message.ice) {\r\n        console.log('Adding ice candidate');\r\n        userConnection.addIceCandidate(message.ice);\r\n      }\r\n      break;\r\n    case RTC_MESSAGE_TYPE_OFFER:\r\n      userConnection.setRemoteDescription(new RTCSessionDescription(message.session)).then(() => {\r\n        console.log('Setting remote session');\r\n        return userConnection.createAnswer().then((session: RTCSessionDescription) => {\r\n          return userConnection.setLocalDescription(session).then(() => {\r\n            this.socket.emit(RTC_MESSAGE, {\r\n              from: this.userId,\r\n              dest: message.from,\r\n              session: session,\r\n              type: RTC_MESSAGE_TYPE_ANSWER,\r\n              username: this.webRTCClientsService.getUserName(this.userId)\r\n            });\r\n          });\r\n        });\r\n      }).catch(e => {\r\n        console.error('Error on SDP-Offer:', e);\r\n      });\r\n      break;\r\n    case RTC_MESSAGE_TYPE_ANSWER:\r\n      userConnection.setRemoteDescription(new RTCSessionDescription(message.session)).then(() => {\r\n        console.log('Setting remote session');\r\n      }).catch(e => console.error('Error on answer:', e));\r\n      break;\r\n  }\r\n}\r\n\r\nprivate userDisconnected(userId) {\r\n  this.webRTCClientsService.removeClient(userId);\r\n}\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { List } from 'immutable';\r\nimport { Observable } from 'rxjs';\r\nimport { Subject } from 'rxjs';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nimport { WebRTCClient } from '../models/webrtc-client.model';\r\n\r\n@Injectable()\r\nexport class WebRTCClientService {\r\n  private clients: BehaviorSubject<List<WebRTCClient>> = new BehaviorSubject(List([]));\r\n  private roomId: BehaviorSubject<string> = new BehaviorSubject(undefined);\r\n  private roomWasFull: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n\r\n  constructor() {}\r\n\r\n  public get getClients(): Observable<List<WebRTCClient>> {\r\n    return this.clients.asObservable();\r\n  }\r\n\r\n  public addClient(newClient: WebRTCClient): void {\r\n    this.clients.next(this.clients.getValue().push(newClient));\r\n  }\r\n\r\n  public removeClient(clientId: string): void {\r\n    const clientList = this.clients.getValue();\r\n    const removeIndex = clientList.findIndex(c => c.id === clientId);\r\n    this.clients.next(clientList.remove(removeIndex));\r\n  }\r\n\r\n  public get getRoomId(): Observable<string> {\r\n    return this.roomId.asObservable();\r\n  }\r\n\r\n  public get getRoomWasFull(): Observable<boolean> {\r\n    return this.roomWasFull.asObservable();\r\n  }\r\n\r\n  public setRoomId(roomId: string, roomWasFull: boolean) {\r\n    this.roomId.next(roomId);\r\n    this.roomWasFull.next(roomWasFull);\r\n  }\r\n\r\n  public getUserName(clientId: string): string {\r\n    const clientList = this.clients.getValue();\r\n    return clientList.find(c => c.id === clientId).userName;\r\n  }\r\n}\r\n","export const RTC_USER_CONNECTED = 'user_connected';\r\nexport const RTC_USER_DISCONNECTED = 'user_disconnected';\r\nexport const RTC_DISCONNECT = 'disconnects';\r\nexport const RTC_INIT = 'init';\r\nexport const RTC_CONNECTED_TO_ROOM = 'connected_to_room';\r\nexport const RTC_ROOM_IS_FULL = 'room_is_full';\r\nexport const RTC_MESSAGE = 'message';\r\nexport const RTC_MESSAGE_TYPE_ICE = 'ice';\r\nexport const RTC_MESSAGE_TYPE_OFFER = 'offer';\r\nexport const RTC_MESSAGE_TYPE_ANSWER = 'answer';\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  ServiceLink: 'http://localhost:8080'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"],"sourceRoot":"webpack:///"}